events {
    worker_connections 1024;
}

http {
    # Docker internal DNS resolver - resolves container names to IPs
    resolver 127.0.0.11 ipv6=off valid=10s;
    # Cache DNS resolutions
    resolver_timeout 5s;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;


    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;

    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # API routes - Use container name with resolver for dynamic IPs
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            # Use container name - Docker DNS will resolve it
            proxy_pass http://backend:8000/api/;
            # Handle ngrok host headers properly - preserve original host
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_connect_timeout 60s;
            proxy_send_timeout 900s;  # 15 minutes for long-running backtests
            proxy_read_timeout 900s;  # 15 minutes for long-running backtests
        }
        
        # Special longer timeout for backtest creation endpoint
        location ~ ^/api/backtests$ {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_connect_timeout 60s;
            proxy_send_timeout 900s;  # 15 minutes
            proxy_read_timeout 900s;  # 15 minutes
        }

        # Frontend routes - Use container name with resolver for dynamic IPs
        location / {
            limit_req zone=general burst=10 nodelay;
            # Use container name - Docker DNS will resolve it
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static files caching - let frontend handle its own assets
        # location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        #     expires 1y;
        #     add_header Cache-Control "public, immutable";
        # }
    }
}

